<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on 随笔小记</title>
    <link>https://ifun.dev/tags/devops/</link>
    <description>Recent content in devops on 随笔小记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>xheavey@gmail.com (Allen Heavey)</managingEditor>
    <webMaster>xheavey@gmail.com (Allen Heavey)</webMaster>
    <copyright>(c) 2016-2017 Allen Heavey.</copyright>
    <lastBuildDate>Sat, 28 Oct 2017 11:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://ifun.dev/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Goreman 基本用法</title>
      <link>https://ifun.dev/post/goreman/</link>
      <pubDate>Sat, 28 Oct 2017 11:00:00 +0800</pubDate>
      <author>xheavey@gmail.com (Allen Heavey)</author>
      <guid>https://ifun.dev/post/goreman/</guid>
      <description>Goreman Goreman 是一个Foreman的Go语言的克隆版本，一般在开发过程中的调试多个进程时使用。
当前开发趋势中，微服务架构以及分布式架构很流行，很多应用依赖于其它应用或者集群化。这样在本地调试时，会有很多不方便的地方。而使用Goreman同时批量管理多个进程，可以方便开发。
下载安装 可以通过go get来下载安装最二进制文件
go get github.com/mattn/goreman  也可以在releases页面下载相应平台的最新二进制执行文件zip包。 然后将解压出来的二进制文件放置于你的PATH路径下。
配置文件 与Foreman使用方法相同，都是基于Procfile配置文件来运行的。其中Procfile文件内容与你正常在shell中执行命令大致相同。如etcd的Procfile文件示例：
# Use goreman to run `go get github.com/mattn/goreman` etcd1: bin/etcd --name infra1 --listen-client-urls http://127.0.0.1:2379 --advertise-client-urls http://127.0.0.1:2379 --listen-peer-urls http://127.0.0.1:12380 --initial-advertise-peer-urls http://127.0.0.1:12380 --initial-cluster-token etcd-cluster-1 --initial-cluster &#39;infra1=http://127.0.0.1:12380,infra2=http://127.0.0.1:22380,infra3=http://127.0.0.1:32380&#39; --initial-cluster-state new --enable-pprof etcd2: bin/etcd --name infra2 --listen-client-urls http://127.0.0.1:22379 --advertise-client-urls http://127.0.0.1:22379 --listen-peer-urls http://127.0.0.1:22380 --initial-advertise-peer-urls http://127.0.0.1:22380 --initial-cluster-token etcd-cluster-1 --initial-cluster &#39;infra1=http://127.0.0.1:12380,infra2=http://127.0.0.1:22380,infra3=http://127.0.0.1:32380&#39; --initial-cluster-state new --enable-pprof etcd3: bin/etcd --name infra3 --listen-client-urls http://127.0.0.1:32379 --advertise-client-urls http://127.0.0.1:32379 --listen-peer-urls http://127.</description>
    </item>
    
  </channel>
</rss>