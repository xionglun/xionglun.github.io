<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Develop on Allen&#39;s Blog</title>
    <link>http://dmdgeeker.com/topics/develop/index.xml</link>
    <description>Recent content in Develop on Allen&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>xheavey@gmail.com (Allen Heavey)</managingEditor>
    <webMaster>xheavey@gmail.com (Allen Heavey)</webMaster>
    <copyright>(c) 2016-2017 Allen Heavey.</copyright>
    <atom:link href="http://dmdgeeker.com/topics/develop/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MySQL 基本操作</title>
      <link>http://dmdgeeker.com/2017/01/01/mysql-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Sun, 01 Jan 2017 17:06:40 +0800</pubDate>
      <author>xheavey@gmail.com (Allen Heavey)</author>
      <guid>http://dmdgeeker.com/2017/01/01/mysql-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</guid>
      <description>

&lt;h3 id=&#34;安装使用&#34;&gt;安装使用&lt;/h3&gt;

&lt;h5 id=&#34;安装&#34;&gt;安装&lt;/h5&gt;

&lt;p&gt;Ubuntu 16.04&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt-get install mysql-server
sudo mysql_secure_installation     # 生产环境必备，安装一些安全策略
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;访问mysql&#34;&gt;访问mysql&lt;/h5&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其它参数：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  -u  username 登陆数据库所使用的数据库用户
  -p  password 使用密码登陆，如果没指定，则会在下面提示输入
  -D  database 此次登陆默认使用的数据库
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;基本操作&#34;&gt;基本操作&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mysql&amp;gt; SHOW DATABASES;                          # 显示所有数据库
mysql&amp;gt; USE DATABASE;                            # 选择某个数据库
mysql&amp;gt; SHOW TABLES;                             # 显示当前数据库的所有表
mysql&amp;gt; SHOW VARIABLES LIKE &#39;%char%&#39;;            # 显示数据库所用字符集
mysql&amp;gt; SHOW FULL COLUMNS FROM database.table;   # 显示某个表的字符集
mysql&amp;gt; DESC TABLENAME;                          # 查看某个表的结构
mysql&amp;gt; CREATE USER &#39;username&#39;@&#39;host&#39; IDENTIFIED BY &#39;password&#39;;  # 创建用户
# host使用%为允许从任意地方登录，如果只允许用户本地登录，改成localhost即可
mysql&amp;gt; DROP USER &#39;username&#39;@&#39;host&#39;;             # 删除用户

mysql&amp;gt; GRANT privileges ON databasename.tablename TO &#39;username&#39;@&#39;host&#39;;  # 授权给某个用户
# privileges 权限，可选值为：SELECT, UPDATE, INSERT, DELETE, DROP, CREATE, ALL 等。
# databasename 数据库名，对所有数据库给予权限用 * 来表示。
# tablename 表名，对所有的表给予权限用 * 来表示。
# 示例：GRANT ALL ON test.* TO &#39;username&#39;@&#39;%&#39;;
# 用此种方式被授权的用户不能给其他用户授权，如需要被授权用户可以进行授权，则需
# GRANT privileges ON databasename.tablename TO &#39;username&#39;@&#39;host&#39; WITH GRANT OPTION;
mysql&amp;gt; FLUSH PRIVILEGES;            # 应用更改的权限
mysql&amp;gt; REVOKE privilege ON databasename.tablename FROM &#39;username&#39;@&#39;host&#39;;  # 撤消用户权限

# 修改数据库或者表字符集为utf8mb4
mysql&amp;gt; ALTER DATABASE databasename CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
mysql&amp;gt; ALTER TABLE tablename CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;

$ mysql -u USERNAME -p PASSWORD -D DATABASE &amp;lt; sql_file        # 执行某个sql文件
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;配置相关&#34;&gt;配置相关&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;将字符编码设置为UTF-8&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf      # 老版本配置文件: /etc/mysql/my.cnf
# [client]
# default-character-set=utf8mb4
#
# [mysqld]
# character-set-server=utf8mb4
# collation-server=utf8mb4_unicode_ci
# init_connect=&#39;SET NAMES utf8mb4&#39;
# skip-character-set-client-handshake = true
#
# [mysql]
# default-character-set = utf8mb4
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;让MySQL可以被远程访问&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf      # 老版本配置文件: /etc/mysql/my.cnf
# 注释掉:  #bind-address  =  127.0.0.1
# 再重启MySQL服务
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;重置MySQL root 密码&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 重置密码:
mysqladmin -u root password NEWPASS
# 更改密码:
mysqladmin -u root -p PASSWORD
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看MySQL当前连接数&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# 查看当前连接数：
mysql&amp;gt; show status like &#39;Conn%&#39;;
# 查看当前客户端连接：
mysql&amp;gt; show processlist;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;问题与解决办法&#34;&gt;问题与解决办法&lt;/h3&gt;

&lt;h4 id=&#34;1-mysql-在导入大量数据时缓慢的问题&#34;&gt;1) MySQL 在导入大量数据时缓慢的问题&lt;/h4&gt;

&lt;p&gt;MySQL导出的SQL语句在导入时有可能会非常非常慢，经历过导入仅45万条记录，竟用了近3个小时。在导出时合理使用几个参数，可以大大加快导 入的速度。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-e&lt;/td&gt;
&lt;td&gt;使用包括几个VALUES列表的多行INSERT语法;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;max_allowed_packet=XXX&lt;/td&gt;
&lt;td&gt;客户端/服务器之间通信的缓存区的最大大小;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&amp;ndash;net_buffer_length=XXX&lt;/td&gt;
&lt;td&gt;TCP/IP和套接字通信缓冲区大小,创建长度达net_buffer_length的行。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;注意：max_allowed_packet和net_buffer_length不能比目标数据库的设定数值大，否则可能出错。&lt;/p&gt;

&lt;p&gt;首先确定目标库的参数值&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mysql&amp;gt; show variables like &#39;max_allowed_packet&#39;;
mysql&amp;gt; show variables like &#39;net_buffer_length&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;根据参数值书写mysqldump命令从源数据库导出数据，如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mysqldump -u root -p -e --max_allowed_packet=1048576 --net_buffer_length=16384 db1 &amp;gt; backup.sql
# 使用-B(--databases)选项备份多个数据库
mysqldump -uroot -p -B db1 db2 db3 &amp;gt; db.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后可以直接进行导入:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mysql -u root -p &amp;lt; ./backup.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2-mysql-中文匹配&#34;&gt;2) MySQL 中文匹配&lt;/h4&gt;

&lt;p&gt;使用LIKE时，中文匹配的问题&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mysql.taobao.org/monthly/2015/10/01/&#34;&gt;MySQL InnoDB 全文索引&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itdadao.com/articles/c15a643840p0.html&#34;&gt;MySQL 5.7 InnoDB全文索引&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>使用Systemd管理应用</title>
      <link>http://dmdgeeker.com/2016/11/08/%E4%BD%BF%E7%94%A8systemd%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8/</link>
      <pubDate>Tue, 08 Nov 2016 17:06:40 +0800</pubDate>
      <author>xheavey@gmail.com (Allen Heavey)</author>
      <guid>http://dmdgeeker.com/2016/11/08/%E4%BD%BF%E7%94%A8systemd%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8/</guid>
      <description>

&lt;h3 id=&#34;关于systemd&#34;&gt;关于systemd&lt;/h3&gt;

&lt;p&gt;Systemd在新版Linux操作系统(Ubuntu 15.04+, RHEL 7+, Debian 8+)里基本都已成为内置软件&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;systemctl --version   # 查看systemd版本号
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;unit&#34;&gt;Unit&lt;/h3&gt;

&lt;p&gt;Systemd以&lt;code&gt;Unit&lt;/code&gt;作为基本管理单元，一般存放于&lt;code&gt;/usr/lib/systemd/system/&lt;/code&gt;或&lt;code&gt;/lib/systemd/system&lt;/code&gt;和&lt;code&gt;/etc/systemd/system/&lt;/code&gt;目录(后者优先级更高)。&lt;/p&gt;

&lt;p&gt;其支持类型有：SERVICE.service, SOCKET.socket, DEVICE.device, MOUNT.mount, AUTOMOUNT.automount, SWAP.swap, TARGET.target, PATH.path, TIMER.timer, SLICE.slice, SCOPE.scope&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;systemctl list-unit-files            # 查看所有已安装服务
systemctl list-units --type=service  # 列出所有正在运行的、类型为 service 的 Unit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;管理自定义的应用一般只需要用到&lt;strong&gt;SERVICE.service&lt;/strong&gt;配置文件。&lt;/p&gt;

&lt;h3 id=&#34;服务配置文件&#34;&gt;服务配置文件&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;此处使用了一个简单的shell脚本，位于/usr/local/bin/hello
其内容为：&lt;/p&gt;

&lt;p&gt;#!/bin/sh&lt;br /&gt;
  echo &amp;ldquo;This is hello program!&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;服务的配置文件一般格式如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Unit]
# 应用描述
Description=A test program
# 应用文档地址
Documentation=https://docs.example.com
# 必须在某一个或多个单元之后启动
After=network.target ssh.service
# 依赖于某一个或多个单元
Requires=ssh.service

[Service]
# 进程启动方式，有：simple(默认), forking, oneshot, notify, dbus, idle这几种方式
Type=simple
# 启动服务之前执行的命令
ExecStartPre=/usr/bin/which hello
# 启动程序
ExecStart=/user/local/bin/hello
# 启动服务之后执行的命令
ExecStartPost=/bin/echo &amp;quot;start hello success.&amp;quot;
# 停止服务时执行的命令
ExecStop=/bin/echo &amp;quot;stop hello&amp;quot;
# 重启服务时执行的命令
ExecReload=/bin/kill -s HUP $MAINPID
# 进程结束后重启方式，可选值有：always, on-success, on-failure, on-abnormal, on-abort, on-watchdog
Restart=on-failure
# 重启间隔秒数
RestartSec=30
# 标准输出到
StandardOutput=syslog
# 标准错误输出到
StandardError=syslog
# 设置syslog中log的程序名称
SyslogIdentifier=helloexample
# 程序运行时的用户
User=root
# 程序运行时分配的组
Group=root
# 程序的环境变量
Environment=NODE_ENV=production

# 依赖于
[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将上面配置写入到&lt;code&gt;/etc/systemd/system/hello.service&lt;/code&gt;中，然后执行命令&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;systemctl daemon-reload
systemctl enable hello.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样即可加载服务到systemd中。&lt;/p&gt;

&lt;p&gt;检查服务是否已加入到systemd管理&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;systemctl status hello.service
#● hello.service - A test program
#   Loaded: loaded (/lib/systemd/system/hello.service; enabled; vendor preset: enabled)
#   Active: inactive (dead)
#     Docs: https://docs.example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动服务&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;systemctl start hello.service
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看hello服务输出&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;journalctl -u hello.service
# 1) 没有使用SyslogIdentifier时的输出
#Feb 07 14:19:40 i-rcaex55q systemd[1]: Starting A test program...
#Feb 07 14:19:40 i-rcaex55q which[27364]: /usr/local/bin/hello
#Feb 07 14:19:40 i-rcaex55q echo[27369]: start hello success.
#Feb 07 14:19:40 i-rcaex55q systemd[1]: Started A test program.
#Feb 07 14:19:40 i-rcaex55q hello[27368]: This is hello program!
#Feb 07 14:19:40 i-rcaex55q echo[27372]: stop hello
#Feb 07 14:22:30 i-rcaex55q systemd[1]: Stopped A test program.
# 2) 使用了SyslogIdentifier=helloexample时的输出
#Feb 07 14:22:39 i-rcaex55q systemd[1]: Starting A test program...
#Feb 07 14:22:39 i-rcaex55q helloexample[27419]: /usr/local/bin/hello
#Feb 07 14:22:39 i-rcaex55q helloexample[27423]: start hello success.
#Feb 07 14:22:39 i-rcaex55q helloexample[27422]: This is hello program!
#Feb 07 14:22:39 i-rcaex55q helloexample[27425]: stop hello
#Feb 07 14:22:39 i-rcaex55q systemd[1]: Started A test program.
#Feb 07 14:30:16 i-rcaex55q systemd[1]: Stopped A test program.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.codeship.com/running-node-js-linux-systemd/&#34;&gt;Running node.js with systemd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-deploy-node-js-applications-using-systemd-and-nginx&#34;&gt;Node.js systemd &amp;amp; nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html&#34;&gt;Systemd 入门&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.archlinux.org/index.php/Systemd&#34;&gt;Archlinux Systemd介绍&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Gitlab安装</title>
      <link>http://dmdgeeker.com/2016/10/08/gitlab%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sat, 08 Oct 2016 12:00:00 +0800</pubDate>
      <author>xheavey@gmail.com (Allen Heavey)</author>
      <guid>http://dmdgeeker.com/2016/10/08/gitlab%E5%AE%89%E8%A3%85/</guid>
      <description>

&lt;h3 id=&#34;安装环境配置&#34;&gt;安装环境配置&lt;/h3&gt;

&lt;p&gt;环境配置参见&lt;a href=&#34;https://github.com/gitlabhq/gitlabhq#software-stack&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu/Debian/CentOS/RHEL&lt;/li&gt;
&lt;li&gt;Ruby (MRI) 2.3&lt;/li&gt;
&lt;li&gt;Git 2.7.4+&lt;/li&gt;
&lt;li&gt;Redis 2.8+&lt;/li&gt;
&lt;li&gt;MySQL or PostgreSQL&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;安装步骤&#34;&gt;安装步骤&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装相关依赖&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install curl openssh-server ca-certificates
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;添加&lt;code&gt;gitlab-ce&lt;/code&gt;到apt仓库中并安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash
sudo apt-get install gitlab-ce
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;配置并启动Gitlab，配置文件位于(&lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo gitlab-ctl reconfigure
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;安装详解&#34;&gt;安装详解&lt;/h4&gt;

&lt;p&gt;在上面的安装步骤中，它自动化的安装了&lt;code&gt;PostgreSQL&lt;/code&gt;, &lt;code&gt;Nginx&lt;/code&gt;等软件。&lt;/p&gt;

&lt;h3 id=&#34;配置相关&#34;&gt;配置相关&lt;/h3&gt;

&lt;p&gt;配置文件位于&lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;中，所有配置都在些进行修改，然后执行&lt;code&gt;reconfigure&lt;/code&gt;命名即可生效。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;邮件SMTP配置&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;# gitlab_rails[&#39;smtp_enable&#39;] = true
# gitlab_rails[&#39;smtp_address&#39;] = &amp;quot;smtp.server&amp;quot;
# gitlab_rails[&#39;smtp_port&#39;] = 465
# gitlab_rails[&#39;smtp_user_name&#39;] = &amp;quot;smtp user&amp;quot;
# gitlab_rails[&#39;smtp_password&#39;] = &amp;quot;smtp password&amp;quot;
# gitlab_rails[&#39;smtp_domain&#39;] = &amp;quot;example.com&amp;quot;
# gitlab_rails[&#39;smtp_authentication&#39;] = &amp;quot;login&amp;quot;
# gitlab_rails[&#39;smtp_enable_starttls_auto&#39;] = true
# gitlab_rails[&#39;smtp_tls&#39;] = false
# gitlab_rails[&#39;smtp_openssl_verify_mode&#39;] = &#39;none&#39; # Can be: &#39;none&#39;, &#39;peer&#39;, &#39;client_once&#39;, &#39;fail_if_no_peer_cert&#39;, see http://api.rubyonrails.org/classes/ActionMailer/Base.html
# gitlab_rails[&#39;smtp_ca_path&#39;] = &amp;quot;/etc/ssl/certs&amp;quot;
# gitlab_rails[&#39;smtp_ca_file&#39;] = &amp;quot;/etc/ssl/certs/ca-certificates.crt&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;将上面的注释符号&lt;code&gt;#&lt;/code&gt;去掉，并填写相应的值即可。参见&lt;a href=&#34;https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/smtp.md&#34;&gt;SMTP配置&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;认证LDAP配置&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;gitlab_rails[&#39;ldap_enabled&#39;] = true
gitlab_rails[&#39;ldap_servers&#39;] = YAML.load &amp;lt;&amp;lt;-&#39;EOS&#39; # remember to close this block with &#39;EOS&#39; below
main: # &#39;main&#39; is the GitLab &#39;provider ID&#39; of this LDAP server
label: &#39;Authenticate&#39;
host: &#39;ldap.example.com&#39;
port: 389
uid: &#39;uid&#39;
method: &#39;plain&#39; # &amp;quot;tls&amp;quot; or &amp;quot;ssl&amp;quot; or &amp;quot;plain&amp;quot;
bind_dn: &#39;uid=root,dc=example,dc=com&#39;
password: &#39;123456789&#39;
active_directory: false
allow_username_or_email_login: false
block_auto_created_users: false
base: &#39;&#39;
user_filter: &#39;&#39;
attributes:
  username: [&#39;uid&#39;, &#39;username&#39;, &#39;sAMAccountName&#39;]
  email:    [&#39;mail&#39;, &#39;email&#39;, &#39;userPrincipalName&#39;]
  name:       &#39;displayName&#39;
  first_name: &#39;cn&#39;
  last_name:  &#39;sn&#39;
EOS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按照上面的配置，进行相应的修改即可。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;数据库配置&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;# gitlab_rails[&#39;db_adapter&#39;] = &amp;quot;postgresql&amp;quot;
# gitlab_rails[&#39;db_encoding&#39;] = &amp;quot;unicode&amp;quot;
# gitlab_rails[&#39;db_collation&#39;] = nil
# gitlab_rails[&#39;db_database&#39;] = &amp;quot;gitlabhq_production&amp;quot;
# gitlab_rails[&#39;db_pool&#39;] = 10
# gitlab_rails[&#39;db_username&#39;] = &amp;quot;gitlab&amp;quot;
# gitlab_rails[&#39;db_password&#39;] = nil
# gitlab_rails[&#39;db_host&#39;] = nil
# gitlab_rails[&#39;db_port&#39;] = 5432
# gitlab_rails[&#39;db_socket&#39;] = nil
# gitlab_rails[&#39;db_sslmode&#39;] = nil
# gitlab_rails[&#39;db_sslrootcert&#39;] = nil
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Redis配置&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-rb&#34;&gt;## Redis TCP connection
# gitlab_rails[&#39;redis_host&#39;] = &amp;quot;127.0.0.1&amp;quot;
# gitlab_rails[&#39;redis_port&#39;] = 6379
# gitlab_rails[&#39;redis_password&#39;] = nil
# gitlab_rails[&#39;redis_database&#39;] = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更多配置请查看&lt;code&gt;/etc/gitlab/gitlab.rb&lt;/code&gt;这个文件。&lt;/p&gt;

&lt;h2 id=&#34;使用docker进行gitlab安装&#34;&gt;使用docker进行Gitlab安装&lt;/h2&gt;

&lt;p&gt;待续&lt;/p&gt;

&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/gitlab-org/omnibus-gitlab/tree/master/doc/settings&#34;&gt;Gitlab配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mirror.tuna.tsinghua.edu.cn/help/gitlab-ce/&#34;&gt;Gitlab清华大学镜像站&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.gitlab.com/downloads/#ubuntu1604&#34;&gt;Gitlab下载安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.gitlab.com/ce/administration/auth/ldap.html&#34;&gt;Gitlab LDAP配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Markdown 语法</title>
      <link>http://dmdgeeker.com/2016/09/24/markdown-%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sat, 24 Sep 2016 14:36:06 +0800</pubDate>
      <author>xheavey@gmail.com (Allen Heavey)</author>
      <guid>http://dmdgeeker.com/2016/09/24/markdown-%E8%AF%AD%E6%B3%95/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;声明&lt;/strong&gt; 本文转载自&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo&#34;&gt;Bitbucket&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; for readmes is pretty popular.  So, I&amp;rsquo;ve given you a demo
here of all the markup we support. In some cases, I copied the doc/examples entirely from the Fireball Markdown site.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t duplicate all the Markdown doc everything tho. For the entire docs and a deeper explanation of Markdown, you still need to go to the &lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; site.&lt;/p&gt;

&lt;p&gt;You can also use &lt;a href=&#34;https://confluence.atlassian.com/x/xTAvEw&#34;&gt;Bitbucket mark up&lt;/a&gt; in comments, issues, and commit messages.&lt;/p&gt;

&lt;p&gt;On this page:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-span-elements&#34;&gt;Span Elements&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-emphasis&#34;&gt;Emphasis&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-strikethrough&#34;&gt;Strikethrough&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-preformatted-code&#34;&gt;Preformatted code&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-links&#34;&gt;Links&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-images&#34;&gt;Images&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-block-elements&#34;&gt;Block Elements&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-headings&#34;&gt;Headings&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-paragraphs-and-blockquotes&#34;&gt;Paragraphs and blockquotes&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-lists&#34;&gt;Lists&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-tables&#34;&gt;Tables&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-code-and-syntax-highlighting&#34;&gt;Code and Syntax highlighting&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://bitbucket.org/tutorials/markdowndemo/overview#markdown-header-horizontal-rules&#34;&gt;Horizontal rules&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;bitbucket-does-not-support&#34;&gt;Bitbucket does NOT support&lt;/h1&gt;

&lt;p&gt;Please note, we don&amp;rsquo;t support arbitrary HTML in Markdown, for example &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; tags. Instead, we use
&lt;a href=&#34;http://pythonhosted.org/Markdown/reference.html#safe_mode&#34;&gt;safe mode&lt;/a&gt;. Safe mode requires that you replace, remove, or escape HTML tags appropriately.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;span-elements&#34;&gt;Span Elements&lt;/h1&gt;

&lt;p&gt;These elements occur within a line of text.  So, for example font changes or links.&lt;/p&gt;

&lt;h2 id=&#34;emphasis&#34;&gt;Emphasis&lt;/h2&gt;

&lt;p&gt;Markdown treats * (asterisk) and _ (underscores) as emphasis markers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;single asterisks&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;double underscores&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All are created from this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You must use the same character must be used to open and close an emphasis span. Emphasis can be used in the mi*dd*le of a word.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Emphasis can be used in the mi*dd*le of a word.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But if you surround an * or _ with spaces, it’ll be treated as a literal asterisk or underscore.&lt;/p&gt;

&lt;p&gt;To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;\*this text is surrounded by literal asterisks\*
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;strikethrough&#34;&gt;Strikethrough&lt;/h2&gt;

&lt;p&gt;Bitbucket&amp;rsquo;s Markdown parser supports strikethrough by wrapping text in &lt;code&gt;~~&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;del&gt;text that has been struckthrough&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;is created from:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~~text that has been struckthrough~~
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;preformatted-code&#34;&gt;Preformatted code&lt;/h2&gt;

&lt;p&gt;To indicate a span of code, wrap it with &lt;code&gt;`&lt;/code&gt; (backtick). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:&lt;/p&gt;

&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;is produced from:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Use the `printf()` function.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To include a literal backtick character within a code span, you can use multiple backticks as the opening and closing delimiters:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;Markdown supports inline and reference links. In both styles, the link text is delimited by [square brackets]. To create an inline link, use this syntax:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[ Text for the link ](URL)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So an inline link to &lt;a href=&#34;http://www.yahoo.com&#34;&gt;Yahoo&lt;/a&gt; looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;So an inline link to [Yahoo](http://www.yahoo.com) looks like this:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is [an example][id] reference-style link.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which gives you a link like this:&lt;/p&gt;

&lt;p&gt;This is &lt;a href=&#34;http://example.com/&#34; title=&#34;Optional Title Here&#34;&gt;an example&lt;/a&gt; reference-style link.&lt;/p&gt;

&lt;p&gt;Elsewhere in the document, usually at the bottom of the file, you define your link label on a line by itself:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[id]: http://example.com/  &amp;quot;Optional Title Here&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Links can get pretty fancy, so if you want the long form version, visit the
 official &lt;a href=&#34;http://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; docs.&lt;/p&gt;

&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;

&lt;p&gt;Markdown uses an image syntax that is intended to resemble the syntax for links, allowing for two styles: inline and reference. Images appear like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.addictedtoibiza.com/wp-content/uploads/2012/12/example.png&#34; alt=&#34;Alt text&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;![Alt text](http://www.addictedtoibiza.com/wp-content/uploads/2012/12/example.png)

![Alt text](http://www.addictedtoibiza.com/wp-content/uploads/2012/12/example.png &amp;quot;Optional title&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;block-elements&#34;&gt;Block Elements&lt;/h1&gt;

&lt;p&gt;These are elements that are a single or multiple lines in length&lt;/p&gt;

&lt;h2 id=&#34;headings&#34;&gt;Headings&lt;/h2&gt;

&lt;p&gt;You can create Atx-style headings by prefixing with a # (hash mark)&lt;/p&gt;

&lt;h1 id=&#34;heading-1-markup-heading-1&#34;&gt;Heading 1 markup  &lt;code&gt;# Heading 1&lt;/code&gt;&lt;/h1&gt;

&lt;h2 id=&#34;heading-2-markup-heading-2&#34;&gt;Heading 2 markup  &lt;code&gt;## Heading 2&lt;/code&gt;&lt;/h2&gt;

&lt;h3 id=&#34;heading-3-markup-heading-3&#34;&gt;Heading 3 markup   &lt;code&gt;### Heading 3&lt;/code&gt;&lt;/h3&gt;

&lt;h4 id=&#34;heading-4-markup-heading-4&#34;&gt;Heading 4 markup  &lt;code&gt;#### Heading 4&lt;/code&gt;&lt;/h4&gt;

&lt;h5 id=&#34;heading-5-markup-heading-5&#34;&gt;Heading 5 markup  &lt;code&gt;##### Heading 5&lt;/code&gt;&lt;/h5&gt;

&lt;h6 id=&#34;heading-6-markup-heading-6&#34;&gt;Heading 6 markup  &lt;code&gt;###### Heading 6&lt;/code&gt;&lt;/h6&gt;

&lt;p&gt;You can also create Setext-style headings which have two levels.&lt;/p&gt;

&lt;h1 id=&#34;level-1-markup-use-an-equal-sign-equal-sign&#34;&gt;Level 1 markup use an equal sign = (equal sign)&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt; Level 1 markup use an equal sign = (equal sign)     
 ==============================
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;level-2-markup-uses-dashes&#34;&gt;Level 2 markup uses - (dashes)&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;Level 2 markup uses - (dashes) 
-------------
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;paragraphs-and-blockquotes&#34;&gt;PARAGRAPHS and BLOCKQUOTES&lt;/h2&gt;

&lt;p&gt;A paragraph is one or more consecutive lines of text separated by one or more
blank lines. A blank line contains nothing but spaces or tabs. Do not indent
normal paragraphs with spaces or tabs.&lt;/p&gt;

&lt;p&gt;This is one paragraph.&lt;/p&gt;

&lt;p&gt;This is a second.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is one paragraph.

This is a second.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Markdown uses email-style &amp;gt; (greater than) characters for blockquoting. If you’re familiar with quoting passages of text in an email message, then you know how to create a blockquote in Markdown. It looks best if you hard wrap the text and put a &amp;gt; before every line:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&lt;/p&gt;

&lt;p&gt;Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&amp;gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&amp;gt; 
&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&amp;gt; id sem consectetuer libero luctus adipiscing.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Blockquotes can be nested (i.e. a blockquote-in-a-blockquote):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is the first level of quoting.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is nested blockquote.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Back to the first level.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; This is the first level of quoting.
&amp;gt;
&amp;gt; &amp;gt; This is nested blockquote.
&amp;gt;
&amp;gt; Back to the first level.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Blockquotes can contain other Markdown elements, including headers, lists, and code blocks:&lt;/p&gt;

&lt;blockquote&gt;
&lt;h2 id=&#34;this-is-a-header&#34;&gt;This is a header.&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;This is the first list item.&lt;/li&gt;
&lt;li&gt;This is the second list item.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here&amp;rsquo;s some example code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;return shell_exec(&amp;quot;echo $input | $markdown_script&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; ## This is a header.
&amp;gt; 
&amp;gt; 1.   This is the first list item.
&amp;gt; 2.   This is the second list item.
&amp;gt; 
&amp;gt; Here&#39;s some example code:
&amp;gt; 
&amp;gt;     return shell_exec(&amp;quot;echo $input | $markdown_script&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;lists&#34;&gt;Lists&lt;/h2&gt;

&lt;p&gt;Markdown supports ordered (numbered) and unordered (bulleted) lists.  List markers typically start at the left margin, but may be indented by up to three spaces. List markers must be followed by one or more spaces or a tab.&lt;/p&gt;

&lt;p&gt;Form bulleted lists with any of * (asterisk), + (plus), or - (dash). You can one or any or mix of these to form a list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Blue&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* Red
+ Green
- Blue
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ordered lists require a numeric character followed by a . (period).&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Item one&lt;/li&gt;
&lt;li&gt;Item two&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Item three&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. Item one
1. Item two 
1. Item three
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Notice the actual value of the number doesn&amp;rsquo;t matter in the list result. However, for readability better to use this markup:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    1. Item one
    2. Item two 
    3. Item three
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lists can be embedded in lists. List items may consist of multiple paragraphs. Each subsequent paragraph in a list item must be indented by either 4 spaces or one tab:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green

&lt;ul&gt;
&lt;li&gt;dark  green&lt;/li&gt;
&lt;li&gt;lime&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Blue&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Item one

&lt;ol&gt;
&lt;li&gt;subitem 1&lt;/li&gt;
&lt;li&gt;subitem 2&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Item two&lt;/p&gt;

&lt;p&gt;This is is a first paragraph.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;Blue
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a second paragraph.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Item three&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code for these embedded lists or paragraphs is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        * Red 
        + Green 
            * dark  green 
            * lime  
        - Blue      
            1. Item one
                1. subitem 1
                1. subitem 2
            1. Item two 

                This is is a first paragraph. 

                * Green 
                * Blue

                This is a second paragraph.

            1. Item three
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also embed blockquotes in a list.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Green
&amp;gt; What is this?  It is embedded blockquote.  Mix &amp;lsquo;em and match &amp;lsquo;em.&lt;/li&gt;
&lt;li&gt;Blue&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Red&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* Green
&amp;gt; What is this?  It is embedded blockquote.  Mix &#39;em and match &#39;em.
* Blue
* Red
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also embed code blocks in a list.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Green&lt;/p&gt;

&lt;p&gt;Try this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is an embedded code block.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;More code!
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Blue&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Red&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* Green

    Try this code:

        This is an embedded code block.

    Then this:

        More code!

* Blue
* Red
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tables&#34;&gt;Tables&lt;/h2&gt;

&lt;p&gt;Bitbucket does not support &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; so you need to use the - (dash) and the | (pipe) symbols to construct a table. The first line contains column headers. Separate columns with the pipe symbol.&lt;/p&gt;

&lt;p&gt;The  second line must be a mandatory separator line between the headers and the content. Subsequent lines are table rows. Columns are always separated by the pipe (|) character.  For example this table:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Comes from this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;First Header  | Second Header
------------- | -------------
Content Cell  | Content Cell
Content Cell  | Content Cell
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can only put simple lines in a table.&lt;/p&gt;

&lt;p&gt;You can specify alignment for each column by adding colons to separator lines. A colon at the left of the separator line, left-aligns the column. A colon on the right, right-aligns the column. Add colons to both sides to center the column is center-aligned.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;Right&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;Left&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Center&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;Computer&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$1600&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;one&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;Phone&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$12&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;three&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;Pipe&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;$1&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;eleven&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code&gt;Right     | Left   | Center 
---------:| :----- |:-----:
Computer  |  $1600 | one
Phone     |    $12 | three
Pipe      |     $1 | eleven
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can apply inline formatting (span-level changes such as fonts or links) to the content of each cell using regular Markdown syntax:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;help()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Display the &lt;strong&gt;help&lt;/strong&gt; window.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;destroy()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Destroy your computer!&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code&gt;| Function name | Description                    |
| ------------- | ------------------------------ |
| `help()`      | Display the __help__ window.   |
| `destroy()`   | **Destroy your computer!**     |
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;code-and-syntax-highlighting&#34;&gt;Code and Syntax highlighting&lt;/h2&gt;

&lt;p&gt;Pre-formatted code blocks are used for writing about programming or markup source code. Rather than forming normal paragraphs, the code block linesare interpreted literally.  Markdown wraps a code block in both &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;p&gt;To produce a code block in Markdown, indent every line of the block by at least 4 spaces or 1 tab. For :&lt;/p&gt;

&lt;p&gt;This is a normal paragraph:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is a code block.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code reveals the indentation.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    This is a normal paragraph:

        This is a code block.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A code block continues until it reaches a line that is not indented (or the end of the page).&lt;/p&gt;

&lt;p&gt;Within a code block, &amp;amp; (ampersands) and &amp;lt; &amp;gt; (angle brackets) are automatically converted into HTML entities. This makes it very easy to include example HTML source code using Markdown — just paste it and indent it. Markdown will handle the hassle of encoding the ampersands and angle brackets. For example, this:&lt;/p&gt;

&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;Here is an example of AppleScript:&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To produce a code block in Markdown, simply indent every line of the block by at least 4 spaces or 1 tab. For example, given this input:&lt;/p&gt;

&lt;p&gt;You can also highlight snippets of text (Bitbucket uses the excellent &lt;a href=&#34;http://www.pygments.org/&#34;&gt;Pygments&lt;/a&gt; library) to allow you to use code highlighting  Here&amp;rsquo;s an example of some Python code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!python
#
def wiki_rocks(text): formatter = lambda t: &amp;quot;funky&amp;quot;+t return formatter(text)        
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To do this, do not indent the block. Start the block with ` three ticks. Then, provide the comment with the type of syntax you are using.  There is a &lt;a href=&#34;http://pygments.org/docs/lexers/&#34;&gt;the vast library of Pygment lexers&lt;/a&gt;. Bitbucket accepts the &amp;lsquo;short name&amp;rsquo; or the &amp;lsquo;mimetype&amp;rsquo; of anything in there.&lt;/p&gt;

&lt;p&gt;You can also use a fence style for code.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is a code block, fenced-style
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which you create with this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~~~~
This is a code block, fenced-style
~~~~
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;See &lt;a href=&#34;http://michelf.ca/projects/php-markdown/extra/&#34;&gt;Michel Fortin&amp;rsquo;s blog&lt;/a&gt; to try out more examples of this coding style. Not everything he demos is guaranteed to work though.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;horizontal-rules&#34;&gt;Horizontal Rules&lt;/h1&gt;

&lt;p&gt;You can produce a horizontal line with any of the following codes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* * *

***

*****

- - - -

-----------------------
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The output looks like this:&lt;/p&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;
</description>
    </item>
    
    <item>
      <title>两步验证(2-step verification)</title>
      <link>http://dmdgeeker.com/2016/08/28/%E4%B8%A4%E6%AD%A5%E9%AA%8C%E8%AF%812-step-verification/</link>
      <pubDate>Sun, 28 Aug 2016 14:36:06 +0800</pubDate>
      <author>xheavey@gmail.com (Allen Heavey)</author>
      <guid>http://dmdgeeker.com/2016/08/28/%E4%B8%A4%E6%AD%A5%E9%AA%8C%E8%AF%812-step-verification/</guid>
      <description>

&lt;h3 id=&#34;关于两步验证&#34;&gt;关于两步验证&lt;/h3&gt;

&lt;p&gt;两步验证是一种安全措施，用于保护某些资源不被泄露，即使在泄露了密码的情况下。
两步验证有多种方式，主要包括：短信、验证器、电话等方式。本文主要讲述验证器方式的两步验证。&lt;/p&gt;

&lt;h3 id=&#34;工作原理&#34;&gt;工作原理&lt;/h3&gt;

&lt;p&gt;使用基于验证器方式的两步验证通常需要另外一部设备（通常是手机，也可能是其它硬件）。
用户在登录系统时，除了输入正常的密码外，还需要输入一个动态生成的密码。
此动态密码由另外一部可信设备提供，具有一个较短的时效性，保证不会重回攻击。&lt;/p&gt;

&lt;p&gt;动态密码生成通常有两种算法：TOTP与HOTP。&lt;/p&gt;

&lt;p&gt;TOTP(Time-Based One-Time Password)是指基于时间的一次性密码。&lt;br /&gt;
HOTP(HMAC-based One-time Password)是指基于计数的一次性密码。&lt;/p&gt;

&lt;p&gt;安全令牌硬件（如某些银行的动态密保，游戏账号的密码令牌）通常是基于HOTP方式实现。
其表现为使用专有硬件，为某一特定产品或系统服务。&lt;/p&gt;

&lt;p&gt;而当前大多数两步验证使用的是TOTP方式实现，比如Google Authenticator。&lt;/p&gt;

&lt;h3 id=&#34;totp流程&#34;&gt;TOTP流程&lt;/h3&gt;

&lt;p&gt;基于TOTP的两步验证流程一般通过需要先绑定，然后随用随验证。&lt;/p&gt;

&lt;p&gt;现假设有一系统&lt;code&gt;S&lt;/code&gt;，用户&lt;code&gt;A&lt;/code&gt;进行两步验证&lt;/p&gt;

&lt;p&gt;绑定流程一般如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;用户&lt;code&gt;A&lt;/code&gt;注册/登录系统&lt;code&gt;S&lt;/code&gt;后，&lt;code&gt;S&lt;/code&gt;后台生成一个OTP链接，在前端生成并显示该链接的二维码&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;用户&lt;code&gt;A&lt;/code&gt;用手机通过Google Authenticator之类的验证器&lt;code&gt;G&lt;/code&gt;扫描二维码进行绑定&lt;/li&gt;
&lt;li&gt;验证器&lt;code&gt;G&lt;/code&gt;会生成动态密码&lt;code&gt;C&lt;/code&gt;，用户&lt;code&gt;A&lt;/code&gt;将动态密码&lt;code&gt;C&lt;/code&gt;输入到系统&lt;code&gt;S&lt;/code&gt;的绑定验证框内&lt;/li&gt;
&lt;li&gt;如果系统&lt;code&gt;S&lt;/code&gt;后台验证该动态密码&lt;code&gt;C&lt;/code&gt;成功，则系统&lt;code&gt;S&lt;/code&gt;与验证器&lt;code&gt;G&lt;/code&gt;绑定成功。否则，绑定失败。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;http://dmdgeeker.com/images/2step-verification-bind.png&#34; alt=&#34;示意图&#34; /&gt;&lt;/p&gt;

&lt;p&gt;验证流程如下:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;用户&lt;code&gt;A&lt;/code&gt;通过账号密码登录系统&lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;系统&lt;code&gt;S&lt;/code&gt;验证账号和密码匹配后，跳转到两步验证页面&lt;/li&gt;
&lt;li&gt;用户&lt;code&gt;A&lt;/code&gt;将验证器&lt;code&gt;G&lt;/code&gt;里的动态验证码&lt;code&gt;C&lt;/code&gt;输入到两步验证页面的验证框中&lt;/li&gt;
&lt;li&gt;系统&lt;code&gt;S&lt;/code&gt;对验证码&lt;code&gt;C&lt;/code&gt;进行验证，如果成功，如登录成功，否则失败&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;totp实现&#34;&gt;TOTP实现&lt;/h3&gt;

&lt;p&gt;可以按照上面所述流程，一步步来进行实现。
下面主要介绍几个关键部份。&lt;/p&gt;

&lt;h4 id=&#34;otp链接&#34;&gt;OTP链接&lt;/h4&gt;

&lt;p&gt;OTP链接格式: &lt;code&gt;otpauth://TYPE/LABEL?PARAMETERS&lt;/code&gt;。
具体可参考&lt;a href=&#34;https://github.com/google/google-authenticator/wiki/Key-Uri-Format&#34;&gt;Google Authenticator URI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;示例：&lt;code&gt;otpauth://totp/Google:alice@google.com?secret=JBSWY3DPEHPK3PXP&amp;amp;issuer=Google&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;其中，前面一段&lt;code&gt;otpauth://totp/Example:alice@google.com&lt;/code&gt;中各部份的意义如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;otpauth&lt;/code&gt;表示OTP认证协议&lt;/li&gt;
&lt;li&gt;&lt;code&gt;totp&lt;/code&gt;表示使用TOTP算法&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Google&lt;/code&gt;表示生成此链接的公司或软件名称&lt;/li&gt;
&lt;li&gt;&lt;code&gt;alice@google.com&lt;/code&gt;表示该链接所对应的用户的用户名&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;而后面一段查询参数中各部份意义如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;secret&lt;/code&gt;是由服务端&lt;strong&gt;Base32&lt;/strong&gt;编码生成的字符串。其内容不重要，只要保证随机性即可，应保证每个用户都拥有一个独立的&lt;code&gt;secret&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;issuer&lt;/code&gt;表示生成此链接的公司或软件名称，应与前一段中相应部份一致。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;动态验证码生成&#34;&gt;动态验证码生成&lt;/h4&gt;

&lt;p&gt;动态验证码的生成算法是公开的，可以到此处进行查处：&lt;a href=&#34;https://tools.ietf.org/html/rfc6238&#34;&gt;RFC6238&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下面给出Go语言版本示例:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;// 6位数字动态验证码
var digits = 6

// secret 即为otpauth链接中的secret
// timeValue 为当前unix时间除以验证码失效时间（通常为30s）
func computeCode(secret string, timeValue int64) string {
	key, err := base32.StdEncoding.DecodeString(secret)
	if err != nil {
		return &amp;quot;&amp;quot;
	}

	hash := hmac.New(sha1.New, key)
	err = binary.Write(hash, binary.BigEndian, timeValue)
	if err != nil {
		return &amp;quot;&amp;quot;
	}
	h := hash.Sum(nil)

	offset := h[len(h)-1] &amp;amp; 0x0f
	val := ((int(h[offset]) &amp;amp; 0x7f) &amp;lt;&amp;lt; 24) |
         ((int(h[offset+1] &amp;amp; 0xff)) &amp;lt;&amp;lt; 16) |
         ((int(h[offset+2] &amp;amp; 0xff)) &amp;lt;&amp;lt; 8) |
         (int(h[offset+3]) &amp;amp; 0xff)
	otp := int64(val) % int64(math.Pow10(digits))
	code := fmt.Sprintf(fmt.Sprintf(&amp;quot;%%0%dd&amp;quot;, digits), otp)
	return code
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;两步验证的优缺点&#34;&gt;两步验证的优缺点&lt;/h3&gt;

&lt;p&gt;两步验证的优点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;系统的安全性提高，即使其它网站泄露了用户的明文密码，仍可以保证用户账户不受攻击。&lt;/li&gt;
&lt;li&gt;动态按时间生成验证码，防止重放攻击。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;两步验证的缺点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;复杂度提高。用户不仅需要输入密码，还需要输入动态验证码。&lt;/li&gt;
&lt;li&gt;需要另一个可信设备。即默认用户在绑定时候所使用的设备是安全的。&lt;/li&gt;
&lt;li&gt;当验证器不可用时（设备丢失或不在身边），无法登录。&lt;/li&gt;
&lt;li&gt;适合web端登录，不适合移动应用登录&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;其它验证方式&#34;&gt;其它验证方式&lt;/h3&gt;

&lt;p&gt;一、短信认证&lt;br /&gt;
短信验证码方式可能是当前中国各大厂商用得最多的一种验证方式。
在用户绑定某个手机号后，将用户与此手机号关联。在有需要进行二次验证的地方，
发送二次验证码短信，用户接收短信并输入该验证码。&lt;/p&gt;

&lt;p&gt;二、扫码认证&lt;br /&gt;
这在微信登录桌面端与web端的唯一方式。
如果你在桌面web端使用支付宝，通常也可以通过手机支付宝扫页面上二维码进行支付确认。&lt;/p&gt;

&lt;p&gt;三、推送认证&lt;br /&gt;
当微信桌面端已登录过，保存有信息时，通常会推送一条登录请求给手机微信端，需要在手机端确认。&lt;/p&gt;

&lt;h3 id=&#34;引用&#34;&gt;引用&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/landing/2step/&#34;&gt;Google 两步验证&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.apple.com/zh-cn/HT204152&#34;&gt;Apple 两步验证&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://support.apple.com/zh-cn/HT204915&#34;&gt;Apple 双重认证&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>