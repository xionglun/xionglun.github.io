<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on X blog</title>
    <link>http://dmdgeeker.com/topics/devops/</link>
    <description>Recent content in Devops on X blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>xheavey@gmail.com (Allen Heavey)</managingEditor>
    <webMaster>xheavey@gmail.com (Allen Heavey)</webMaster>
    <copyright>(c) 2016-2017 Allen Heavey.</copyright>
    <lastBuildDate>Sun, 09 Jul 2017 20:00:00 +0800</lastBuildDate>
    
	<atom:link href="http://dmdgeeker.com/topics/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>火焰图性能分析</title>
      <link>http://dmdgeeker.com/post/flamegraph/</link>
      <pubDate>Sun, 09 Jul 2017 20:00:00 +0800</pubDate>
      <author>xheavey@gmail.com (Allen Heavey)</author>
      <guid>http://dmdgeeker.com/post/flamegraph/</guid>
      <description>前言 应用程序性能一直是软件开发过程中一个很重要的话题，性能的好坏不仅会直接影响到所消耗的资源和投入的金钱， 而且会直接影响到用户的使用体验，从而间接影响一款产品的生命周期。
在软件开发过程中，一般会使用多种手段来量化性能、追踪性能问题等。比如使用ab及wrk等工具来压测网络应用，使用Zipkin或Opentracing等跟踪性能问题，使用日志来定位性能问题，使用gdb等工具调试性能问题。
而火焰图是一个可以让你直观了解性能问题的方式，最终一般会生成一张SVG格式的图片，你可以会方便地进行缩放以及进一步查看局部区域，如下所示。 关于火焰图 生成火焰图，需要经历采集、转化、渲染等多个步骤，不同步骤需要用到不同的工具。
首先，我们需要进行性能数据采集。只有收集到足够的数据后，才能进行相应的分析。 性能采集工具不同操作系统各有不同，在Linux操作系统中常用的有Perf和Systemtap这两种工具。
在采集到数据后，需要对数据进行处理，以获得相应格式化的数据。 使用FlameGraph可以对这两种工具采集来的数据进行处理，生成可以渲染的数据。 同时，FlameGraph也可以将处理完成的数据生成SVG图片，以供仔细分析。
Openresty应用作者在使用火焰图过程中，总结出了一套相应的性能采集工具集Openresty systemtap toolkit，来采集各种不同类型的性能数据。
采集性能数据的类型有几种，主要是下面几种：
 On CPU 当CPU占用率比较高时使用 Off CPU 当CPU占用率并不高，性能瓶颈位于IO或者锁等地方时使用 Memory 当可能出现内存泄露时使用 Hot/Cold 试验性质，联合CPU的两种类型，相当于On CPU + Off CPU  使用Perf采集数据 perf是Linux系统下的一个性能采集工具，只能用于Linux系统。
 安装perf工具
 Ubuntu 16.04
sudo apt install -y linux-tools-`uname -r`  CentOS 7
sudo yum install perf    安装完成后，就可以对相应的程序进行性能采集了。在进行采集时候，为了更显著地看到效果（特别是在测试时候，程序调用量很小，很难看出效果），可以对程序进行压力测试来配合性能采集。
 获取目标程序的pid。通过ps即可查看到（将XXX替换为相应程序名称）：
sudo ps aux | grep XXX  通过perf工具进行采集（将下面命令中的PID替换成真实的PID，各参数的含义请参考文档 ）：
# 采集 On-CPU 性能数据 perf record -F 99 -p PID -g -- sleep 60  通过上面的命令，会在当前目录下生成一个名为perf.</description>
    </item>
    
  </channel>
</rss>